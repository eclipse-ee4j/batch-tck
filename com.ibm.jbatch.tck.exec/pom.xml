<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2012, 2020 International Business Machines Corp. and others

  See the NOTICE file distributed with this work for additional information
  regarding copyright ownership. Licensed under the Apache License,
  Version 2.0 (the "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

   SPDX-License-Identifier: Apache-2.0
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>jakarta.batch</groupId>
        <artifactId>tck-parent</artifactId>
        <version>2.0.0</version>
    </parent>

    <groupId>jakarta.batch</groupId>
    <artifactId>com.ibm.jbatch.tck.exec</artifactId>
    <packaging>pom</packaging>
    <version>2.0.0</version>
    <name>Jakarta Batch TCK Execution (using JBatch, the former RI, against TCK Maven module)</name>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.batch</groupId>
            <artifactId>jakarta.batch-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.jbatch</groupId>
            <artifactId>com.ibm.jbatch.spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.batch</groupId>
            <artifactId>com.ibm.jbatch.tck</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.batch</groupId>
            <artifactId>com.ibm.jbatch.tck.spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.jbatch</groupId>
            <artifactId>com.ibm.jbatch.container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbynet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 
            Using a milestone release rather than a final release is a questionable practice to use for 
            something as formal as a TCK project.

            Note however that the current module is not at all part of the official TCK "distribution" or
            the TCK process.  This is just a convenience module for executing the TCK against the jbatch 
            impl as compatible implementation.

            The shortcut here allows us to release the full, final TCK as-is, without waiting for a final,
            compatible JAXB implementation.

            Though I think this would be questionable if we were using this execution to certify as a 
            compatible implementation, we are NOT.  

            The certification happens via another process and will be recorded by issues labeled: 
            https://github.com/eclipse-ee4j/batch-api/issues?q=is%3Aissue+is%3Aopen+label%3Acertification

            So think of this as "testing the TCK" (rather than testing jbatch against the TCK), which is
            a useful thing to do now.
        -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>3.0.0-M4</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- Not sure how to reference the suite XML file within the dependency artifact, so rely on an unpacking first.-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                </executions>
                <configuration>
                    <artifactItems>
                        <artifactItem>
                            <groupId>jakarta.batch</groupId>
                            <artifactId>com.ibm.jbatch.tck</artifactId>
                            <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                            <includes>testng/*</includes>
                        </artifactItem>
                    </artifactItems>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.org.apache.maven.plugins.maven-failsafe-plugin}</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <suiteXmlFiles>
                                <!-- Not sure how to reference the suite XML file within the dependency artifact, so rely on an unpacking first.-->
                                <suiteXmlFile>
                                    ${project.build.directory}/test-classes/testng/batch-tck-impl-SE-suite.xml
                                </suiteXmlFile>
                                <!-- For debugging -->
                                <!--
                                                                <suiteXmlFile>${project.basedir}/testng.suite.xml</suiteXmlFile>
                                -->
                            </suiteXmlFiles>
                            <systemPropertiesFile>${project.build.directory}/test-classes/batch-tck-testng.properties</systemPropertiesFile>
                            <systemPropertiesFile>${project.basedir}/config/tck.exec.properties</systemPropertiesFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
